{
    "actions": [
        {
            "command": "speak",
            "perameters": {
                "text": "This is the text that the robot will speak."
            },
            "description": "This command will make the robot speak the text that is passed to it."
        },
        {
            "command": "sit",
            "perameters": {},
            "description": "This command will make the robot sit down. It will stop following you if in follow mode. This also powers down the robot to save power. To wake the robot up, say use stand."
        },
        {
            "command": "stand",
            "perameters": {},
            "description": "This command will make the robot stand up if sitting, or stop follwing if in follow mode and stop looking if in look mode. This also powers up the robot."
        },
        {
            "command": "follow",
            "perameters": {
                "distance": 1
            },
            "distance": {
                "Near": 0.5,
                "Medium": 1,
                "Far": 1.5
            },
            "description": "This command will make the robot follow you. You can set the distance between you and the robot. The default distance is 1 meter."
        },
        {
            "command": "look",
            "perameters": {},
            "description": "This command will make the robot's arm rotate to look at you. Useful for when the user want stay in place and interact with the robot."
        },
        {
            "command": "reset_follower",
            "perameters": {},
            "description": "This command will reset the person that the following program will track. This effects the look and follow commands."
        },
        {
            "command": "fan_power",
            "perameters": {
                "power": 100
            },
            "description": "This command will set the power of the fan on the robot for 120 seconds. The power is an integer value between 0 and 100. The purpose of this command is to make the robot quieter. The default should be 0."
        },
        {
            "command": "graph_nav_record_start",
            "perameters": {},
            "description": "This command will start recording the robot's environment for the graph navigation system. This is used to create a map of the environment for the robot to navigate. The user can add waypoints to the map when this is recording."
        },
        {
            "command": "graph_nav_record_stop",
            "perameters": {},
            "description": "This command will stop recording the robot's environment for the graph navigation system."
        },
        {
            "command": "graph_nav_download",
            "perameters": {
                "filename": "default",
                "description": "description"
            },
            "description": "This command will download the map of the environment that the robot has created. This is used for the graph navigation system. The user can specify the file name of the map to download. The default file name is 'default'. The user must also provide a description of the map. If the content of the map is not clear, ask the user for a description. If you need to ask and you are currently following the user, stop following the user and look instead but start follwing again after it is resolved."
        },
        {
            "command": "graph_nav_upload",
            "perameters": {
                "filename": "filename"
            },
            "description": "This command will load a map of the environment that the robot has stored. This is used for the graph navigation system. The user must specify the file name of the map to load. The list of available maps is found in the 'Robot Environment Waypoints' message."
        },
        {
            "command": "graph_nav_add_waypoint",
            "perameters": {
                "name": "name",
                "description": "description"
            },
            "description": "This command will add a waypoint to the map of the environment that the robot has created. This is used for the graph navigation system. The user can specify the name of the waypoint to add. There should be a unique name for each waypoint. Add a description to each waypoint and ask the user if it is not clear, ask the user about the waypoint. If you need to ask and you are currently following the user, stop following the user and look instead but start follwing again after it is resolved."
        }
    ]
}